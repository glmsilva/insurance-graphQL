"""
Autogenerated input type of CreatePolicyMutation
"""
input CreatePolicyMutationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  insuredPerson: InsuredPersonInput!
  vehicle: VehicleInput!
}

"""
Autogenerated return type of CreatePolicyMutation.
"""
type CreatePolicyMutationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  policy: Policy
}

"""
Attributes for a Insured Person query
"""
type InsuredPerson {
  """
  Insured person's CPF number
  """
  cpf: String!

  """
  The insured person's name
  """
  name: String!
}

input InsuredPersonInput {
  cpf: String!
  name: String!
}

type Mutation {
  createPolicy(
    """
    Parameters for CreatePolicyMutation
    """
    input: CreatePolicyMutationInput!
  ): CreatePolicyMutationPayload
}

"""
a policy type
"""
type Policy {
  """
  the specific day when the insurance coverage begins
  """
  effectiveDate: String!

  """
  the day the insurance coverage ends
  """
  expirationDate: String!

  """
  person who will receive the benefit under the insurance policy after the occurrence loss
  """
  insuredPerson: InsuredPerson!
  policyId: String!

  """
  the good of the insured
  """
  vehicle: Vehicle!
}

"""
The query root of this schema
"""
type Query {
  policies: [Policy!]!
  policy(policyId: Int!): Policy!
}

type UserError {
  message: String!
  path: String
}

"""
Fields for a vehicle query
"""
type Vehicle {
  """
  Vehicle's brand
  """
  brand: String!

  """
  Vehicle's license plate
  """
  licensePlate: String!

  """
  Vehicle's model
  """
  model: String!

  """
  Vehicle's year released
  """
  year: String!
}

input VehicleInput {
  brand: String!
  licensePlate: String!
  model: String!
  year: String!
}
